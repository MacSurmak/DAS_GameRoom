from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.text import Format

LEXICON: dict[str, dict[str, str]] = {
    'ru': {
        # Commands messages
        'start': '–ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è.',
        'start-registered': '–°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç, {name}!',
        'help': '* –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ø—Ä–∞–≤–∫–∞ *',

        # Registration
        'get_lang': '–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —è–∑—ã–∫:',

        'get_name': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á):',
        'len_error0': '–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.',
        'len_error1': '–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –±–æ–ª—å—à–µ —Å–ª–æ–≤, —á–µ–º –Ω—É–∂–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.',
        'alpha_error': '–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –µ—Å—Ç—å –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.',
        'type_error': '–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.',

        'get_year': '–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Å—Ç—É–ø–µ–Ω—å –æ–±—É—á–µ–Ω–∏—è –∏ –∫—É—Ä—Å.',
        'get_room': '–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã:',
        'name_confirmation': '{dialog_data[last_name]} {dialog_data[first_name]} {dialog_data[middle_name]}, –≤–µ—Ä–Ω–æ?',

        # Buttons
        'start_registration': '–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è',
        'select_language': '–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫',
        'bachelor': '–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç',
        'specialist': '–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç',
        'master': '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞',

        # Service buttons
        'yes': '–î–∞',
        'no': '–ù–µ—Ç',
        'back': '<<< –ù–∞–∑–∞–¥',
        'next': '–î–∞–ª–µ–µ >>>',
        'cancel': '–û—Ç–º–µ–Ω–∞',

        # Service
        'throttling-warning': '–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! '
                              '–ü–æ–¥–æ–∂–¥–∏ 10 —Å–µ–∫—É–Ω–¥ –ø—Ä–µ–∂–¥–µ, —á–µ–º –ø–∏—Å–∞—Ç—å —Å–Ω–æ–≤–∞.'
    },

    'en': {

    },

    'de': {

    },

    'es': {

    },

}


LEXICON_COMMANDS: dict[str, str] = {
    '/start': '–°—Ç–∞—Ä—Ç',
    '/help': '–ü–æ–º–æ—â—å'
}

LANGUAGES = [
    {"code": "ru", "name": "–†—É—Å—Å–∫–∏–π üá∑üá∫"},
    {"code": "en", "name": "English üá∫üá∏"},
    {"code": "de", "name": "Deutsch üá©üá™"},
    {"code": "es", "name": "Espa√±ol üá™üá∏"}
]

def lexicon(lang: str, key: str) -> str:
    # return LEXICON[f'{lang}'][key]
    return LEXICON['ru'][key]


class LocalizedTextFormat(Format):
    def __init__(self, key: str, default_lang="ru", **kwargs):
        super().__init__(text="", **kwargs)
        self.key = key
        self.default_lang = default_lang

    async def _render_text(
        self, data: dict, manager: DialogManager
    ) -> str:
        lang = manager.middleware_data.get("lang", self.default_lang)
        text = lexicon(lang, self.key)
        return text.format_map(data)
